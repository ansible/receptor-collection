# SonarCloud configuration for ansible.receptor-collection
# Complete documentation: https://docs.sonarcloud.io/

# =============================================================================
# PROJECT IDENTIFICATION (REQUIRED)
# =============================================================================

# The unique project identifier. This is mandatory.
# Do not duplicate or reuse!
# Available characters: [a-zA-Z0-9_:\.\-]
# Must have least one non-digit.
sonar.projectKey=ansible_receptor-collection
sonar.organization=ansible

# Project metadata
sonar.projectName=receptor-collection

# =============================================================================
# SOURCE AND TEST CONFIGURATION
# =============================================================================

# Source directories to analyze
# Note: This is an Ansible collection with YAML-based roles (no Python plugins)
sonar.sources=roles

# Include Ansible YAML files for analysis
sonar.inclusions=\
    **/*.yml,\
    **/*.yaml

sonar.exclusions=\
    **/*.md,\
    **/*.rst,\
    **/*.txt,\
    molecule/**,\
    tests/**,\
    .github/**,\
    changelogs/**,\
    venv/**,\
    **/__pycache__/**,\
    **/*.pyc,\
    reports/**

# Test directories
sonar.tests=molecule
sonar.test.inclusions=**/verify.yml,**/test.yml

# Set branch-specific new code definition
#
# This is important to always check against the main branch for new PRs,
# otherwise the PR may fail during backporting, since the old version of the code
# may not respect the minimum requirements for the existing Quality Gate.
sonar.newCode.referenceBranch=main

# =============================================================================
# LANGUAGE CONFIGURATION
# =============================================================================

# File encoding
sonar.sourceEncoding=UTF-8

# Disable generic YAML analysis to avoid conflict with Ansible plugin
# The Ansible plugin will handle YAML analysis with Ansible-specific rules
sonar.yaml.activate=false

# Remove YAML file patterns to prevent language conflict
# Set to empty string so YAML plugin doesn't claim .yml/.yaml files
sonar.yaml.file.suffixes=

# =============================================================================
# ANSIBLE LANGUAGE CONFIGURATION
# =============================================================================

# Ansible file patterns
# SonarCloud will analyze these files with Ansible-specific rules
sonar.ansible.file.suffixes=.yml,.yaml

# Import ansible-lint report for additional security and quality checks
# The report is generated in SARIF format during CI
sonar.ansible.ansible-lint.reportPaths=reports/ansible-lint.sarif

# =============================================================================
# QUALITY METRICS (NO COVERAGE)
# =============================================================================

# Note: This is an Ansible collection with no executable code (YAML only)
# Coverage metrics are not applicable - focus on quality metrics instead:
# - Code Smells (maintainability)
# - Bugs (reliability)
# - Vulnerabilities (security)
# - Code Duplication
# - Complexity
